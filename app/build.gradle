import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.aspectj:aspectjtools:1.8.9'
    }
}


apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
repositories {
    mavenCentral()
}

android {

    compileSdkVersion 24
    buildToolsVersion '24.0.2'
    defaultConfig {
        applicationId "com.app.sinkinchan.smartstock"
        minSdkVersion 19
        targetSdkVersion 24
        versionCode 10
        versionName "1.1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        renderscriptTargetApi 18
        renderscriptSupportModeEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//            signingConfig signingConfigs.SmartStock
        }
        debug {
//            signingConfig signingConfigs.SmartStock
        }
    }
    productFlavors {
    }

    dataBinding {
        enabled true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    productFlavors {
        meizu {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10001"]
        }
        xiaomi {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10002"]
        }
        qh360 {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10003"]
        }
        baidu {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10004"]
        }
        wandoujia {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10005"]
        }
        baiduyun {
            manifestPlaceholders = [BAIDU_CHANNEL_VALUE: "10006"]
        }
    }
    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [BAIDU_CHANNEL_VALUE: name]
    }
}


repositories {
    maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'org.apache.commons:commons-lang3:3.4'
    testCompile 'junit:junit:4.12'
    compile 'org.jsoup:jsoup:1.9.2'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile 'com.android.support:support-v4:24.2.0'
    compile 'com.android.support:design:24.2.0'
    compile 'com.android.support:cardview-v7:24.2.0'
    compile 'com.android.support:recyclerview-v7:24.2.0'
    compile 'com.jcodecraeer:xrecyclerview:1.2.7'
    compile 'com.github.barteksc:android-pdf-viewer:2.0.3'
    compile 'com.duowan.android.netroid:netroid:1.2.1'
    compile 'com.romainpiel.shimmer:library:1.4.0@aar'
    // 指定下载编译百度移动统计JAR
    compile 'com.baidu.mobstat:mtj-sdk:latest.integration'
    //    mina 支持库
    compile('org.apache.mina:mina-core:2.0.7') {
        exclude module: 'slf4j-api'
    }
    compile 'org.slf4j:slf4j-android:1.6.1-RC1'
    compile 'com.github.satyan:sugar:1.4'
    //图片加载框架
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile project(':aspectj')
}

final def log = project.logger
final def variants = project.android.applicationVariants

variants.all { variant ->
    if (!variant.buildType.isDebuggable()) {
        log.debug("Skipping non-debuggable build type '${variant.buildType.name}'.")
        return;
    }

    JavaCompile javaCompile = variant.javaCompile
    javaCompile.doLast {
        String[] args = ["-showWeaveInfo",
                         "-1.8",
                         "-inpath", javaCompile.destinationDir.toString(),
                         "-aspectpath", javaCompile.classpath.asPath,
                         "-d", javaCompile.destinationDir.toString(),
                         "-classpath", javaCompile.classpath.asPath,
                         "-bootclasspath", project.android.bootClasspath.join(File.pathSeparator)]
        log.debug "ajc args: " + Arrays.toString(args)

        MessageHandler handler = new MessageHandler(true);
        new Main().run(args, handler);
        for (IMessage message : handler.getMessages(null, true)) {
            switch (message.getKind()) {
                case IMessage.ABORT:
                case IMessage.ERROR:
                case IMessage.FAIL:
                    log.error message.message, message.thrown
                    break;
                case IMessage.WARNING:
                    log.warn message.message, message.thrown
                    break;
                case IMessage.INFO:
                    log.info message.message, message.thrown
                    break;
                case IMessage.DEBUG:
                    log.debug message.message, message.thrown
                    break;
            }
        }
    }
}

